<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="initial-scale=1,user-scalable=no,maximum-scale=1,width=device-width">
        <meta name="mobile-web-app-capable" content="yes">
        <meta name="apple-mobile-web-app-capable" content="yes">
        <link rel="stylesheet" href="css/leaflet.css">
        <link rel="stylesheet" href="css/qgis2web.css"><link rel="stylesheet" href="css/fontawesome-all.min.css">
        <link rel="stylesheet" href="css/leaflet-control-geocoder.Geocoder.css">
        <link rel="stylesheet" href="css/leaflet-measure.css">
        <style>
        html, body, #map {
            width: 100%;
            height: 100%;
            padding: 0;
            margin: 0;
        }
        </style>
        <title></title>
    </head>
    <body>
        <div id="map">
        </div>
        <script src="js/qgis2web_expressions.js"></script>
        <script src="js/leaflet.js"></script>
        <script src="js/multi-style-layer.js"></script>
        <script src="js/leaflet.rotatedMarker.js"></script>
        <script src="js/leaflet.pattern.js"></script>
        <script src="js/leaflet-hash.js"></script>
        <script src="js/Autolinker.min.js"></script>
        <script src="js/rbush.min.js"></script>
        <script src="js/labelgun.min.js"></script>
        <script src="js/labels.js"></script>
        <script src="js/leaflet-control-geocoder.Geocoder.js"></script>
        <script src="js/leaflet-measure.js"></script>
        <script src="data/PREDIOS_WGS84_3.js"></script>
        <script src="data/SE_MIRAJE_POL_WGS84_4.js"></script>
        <script src="data/COYA_SUR_WGS84_5.js"></script>
        <script src="data/BOCATOMA_WGS84_6.js"></script>
        <script src="data/AFECTACION_CCEE_WGS84_7.js"></script>
        <script src="data/RED_VIAL_WGS84_8.js"></script>
        <script src="data/RED_HIDROGRAFICA_WGS84_9.js"></script>
        <script src="data/LT_AGOSTO_2019_WGS84_10.js"></script>
        <script src="data/LINEAS_EXISTENTES_WGS84_11.js"></script>
        <script src="data/EJE_LINEA_FERREA_WGS84_12.js"></script>
        <script src="data/TENDIDO_ELECTRICO_WGS84_13.js"></script>
        <script src="data/CAERIAS_WGS84_14.js"></script>
        <script src="data/CAMINO_ACCESO_WGS84_15.js"></script>
        <script src="data/ACUEDUCTO_SQM_WGS84_16.js"></script>
        <script src="data/ESTRUCTURAS__2191204_WGS84_17.js"></script>
        <script src="data/NODOS_20200519_WGS84_18.js"></script>
        <script>
        var map = L.map('map', {
            zoomControl:true, maxZoom:28, minZoom:1
        }).fitBounds([[-22.45688618165719,-69.70268799809125],[-22.359577567023816,-69.52484542482276]]);
        var hash = new L.Hash(map);
        map.attributionControl.setPrefix('<a href="https://github.com/tomchadwin/qgis2web" target="_blank">qgis2web</a> &middot; <a href="https://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> &middot; <a href="https://qgis.org">QGIS</a>');
        var autolinker = new Autolinker({truncate: {length: 30, location: 'smart'}});
        var measureControl = new L.Control.Measure({
            position: 'topleft',
            primaryLengthUnit: 'meters',
            secondaryLengthUnit: 'kilometers',
            primaryAreaUnit: 'sqmeters',
            secondaryAreaUnit: 'hectares'
        });
        measureControl.addTo(map);
        document.getElementsByClassName('leaflet-control-measure-toggle')[0]
        .innerHTML = '';
        document.getElementsByClassName('leaflet-control-measure-toggle')[0]
        .className += ' fas fa-ruler';
        var bounds_group = new L.featureGroup([]);
        function setBounds() {
        }
        map.createPane('pane_OpenStreetMap_0');
        map.getPane('pane_OpenStreetMap_0').style.zIndex = 400;
        var layer_OpenStreetMap_0 = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            pane: 'pane_OpenStreetMap_0',
            opacity: 1.0,
            attribution: '',
            minZoom: 1,
            maxZoom: 28,
            minNativeZoom: 0,
            maxNativeZoom: 19
        });
        layer_OpenStreetMap_0;
        map.addLayer(layer_OpenStreetMap_0);
        map.createPane('pane_GoogleStreets_1');
        map.getPane('pane_GoogleStreets_1').style.zIndex = 401;
        var layer_GoogleStreets_1 = L.tileLayer('https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
            pane: 'pane_GoogleStreets_1',
            opacity: 1.0,
            attribution: '',
            minZoom: 1,
            maxZoom: 28,
            minNativeZoom: 0,
            maxNativeZoom: 19
        });
        layer_GoogleStreets_1;
        map.addLayer(layer_GoogleStreets_1);
        map.createPane('pane_GoogleSatellite_2');
        map.getPane('pane_GoogleSatellite_2').style.zIndex = 402;
        var layer_GoogleSatellite_2 = L.tileLayer('https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
            pane: 'pane_GoogleSatellite_2',
            opacity: 1.0,
            attribution: '',
            minZoom: 1,
            maxZoom: 28,
            minNativeZoom: 0,
            maxNativeZoom: 19
        });
        layer_GoogleSatellite_2;
        map.addLayer(layer_GoogleSatellite_2);
        function pop_PREDIOS_WGS84_3(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">IDENTIFICA</th>\
                        <td>' + (feature.properties['IDENTIFICA'] !== null ? autolinker.link(feature.properties['IDENTIFICA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PLANO_PES</th>\
                        <td>' + (feature.properties['PLANO_PES'] !== null ? autolinker.link(feature.properties['PLANO_PES'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">CARPETA_EL</th>\
                        <td>' + (feature.properties['CARPETA_EL'] !== null ? autolinker.link(feature.properties['CARPETA_EL'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ROL_CIREN</th>\
                        <td>' + (feature.properties['ROL_CIREN'] !== null ? autolinker.link(feature.properties['ROL_CIREN'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PROPIETARI</th>\
                        <td>' + (feature.properties['PROPIETARI'] !== null ? autolinker.link(feature.properties['PROPIETARI'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">NOMBRE_PRE</th>\
                        <td>' + (feature.properties['NOMBRE_PRE'] !== null ? autolinker.link(feature.properties['NOMBRE_PRE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">DESTINO</th>\
                        <td>' + (feature.properties['DESTINO'] !== null ? autolinker.link(feature.properties['DESTINO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">USO_ACTUAL</th>\
                        <td>' + (feature.properties['USO_ACTUAL'] !== null ? autolinker.link(feature.properties['USO_ACTUAL'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">COMUNA</th>\
                        <td>' + (feature.properties['COMUNA'] !== null ? autolinker.link(feature.properties['COMUNA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PROVINCIA</th>\
                        <td>' + (feature.properties['PROVINCIA'] !== null ? autolinker.link(feature.properties['PROVINCIA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">REGION</th>\
                        <td>' + (feature.properties['REGION'] !== null ? autolinker.link(feature.properties['REGION'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">FOJAS</th>\
                        <td>' + (feature.properties['FOJAS'] !== null ? autolinker.link(feature.properties['FOJAS'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">NUMERO</th>\
                        <td>' + (feature.properties['NUMERO'] !== null ? autolinker.link(feature.properties['NUMERO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">AÑO</th>\
                        <td>' + (feature.properties['AÑO'] !== null ? autolinker.link(feature.properties['AÑO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">CBR</th>\
                        <td>' + (feature.properties['CBR'] !== null ? autolinker.link(feature.properties['CBR'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SUPERFICIE</th>\
                        <td>' + (feature.properties['SUPERFICIE'] !== null ? autolinker.link(feature.properties['SUPERFICIE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">LONGITUD_S</th>\
                        <td>' + (feature.properties['LONGITUD_S'] !== null ? autolinker.link(feature.properties['LONGITUD_S'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SUPERFIC_1</th>\
                        <td>' + (feature.properties['SUPERFIC_1'] !== null ? autolinker.link(feature.properties['SUPERFIC_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">LONGITUD_1</th>\
                        <td>' + (feature.properties['LONGITUD_1'] !== null ? autolinker.link(feature.properties['LONGITUD_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SUPERFIC_2</th>\
                        <td>' + (feature.properties['SUPERFIC_2'] !== null ? autolinker.link(feature.properties['SUPERFIC_2'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ESTRUCTURA</th>\
                        <td>' + (feature.properties['ESTRUCTURA'] !== null ? autolinker.link(feature.properties['ESTRUCTURA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ANCHO_FRAN</th>\
                        <td>' + (feature.properties['ANCHO_FRAN'] !== null ? autolinker.link(feature.properties['ANCHO_FRAN'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SEMAFORIZA</th>\
                        <td>' + (feature.properties['SEMAFORIZA'] !== null ? autolinker.link(feature.properties['SEMAFORIZA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">NEGOCIADOR</th>\
                        <td>' + (feature.properties['NEGOCIADOR'] !== null ? autolinker.link(feature.properties['NEGOCIADOR'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">AFECTACION</th>\
                        <td>' + (feature.properties['AFECTACION'] !== null ? autolinker.link(feature.properties['AFECTACION'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SELECCION</th>\
                        <td>' + (feature.properties['SELECCION'] !== null ? autolinker.link(feature.properties['SELECCION'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">FECHA_ENTR</th>\
                        <td>' + (feature.properties['FECHA_ENTR'] !== null ? autolinker.link(feature.properties['FECHA_ENTR'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">IDE</th>\
                        <td>' + (feature.properties['IDE'] !== null ? autolinker.link(feature.properties['IDE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">GESTOR_CBR</th>\
                        <td>' + (feature.properties['GESTOR_CBR'] !== null ? autolinker.link(feature.properties['GESTOR_CBR'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">GESTOR_TER</th>\
                        <td>' + (feature.properties['GESTOR_TER'] !== null ? autolinker.link(feature.properties['GESTOR_TER'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">LONGITUD_C</th>\
                        <td>' + (feature.properties['LONGITUD_C'] !== null ? autolinker.link(feature.properties['LONGITUD_C'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">AFECTACI_1</th>\
                        <td>' + (feature.properties['AFECTACI_1'] !== null ? autolinker.link(feature.properties['AFECTACI_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">TIPO_BNUP</th>\
                        <td>' + (feature.properties['TIPO_BNUP'] !== null ? autolinker.link(feature.properties['TIPO_BNUP'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Leng</th>\
                        <td>' + (feature.properties['SHAPE_Leng'] !== null ? autolinker.link(feature.properties['SHAPE_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Area</th>\
                        <td>' + (feature.properties['SHAPE_Area'] !== null ? autolinker.link(feature.properties['SHAPE_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_PREDIOS_WGS84_3_0() {
            return {
                pane: 'pane_PREDIOS_WGS84_3',
                opacity: 1,
                color: 'rgba(227,26,28,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 4.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_PREDIOS_WGS84_3');
        map.getPane('pane_PREDIOS_WGS84_3').style.zIndex = 403;
        map.getPane('pane_PREDIOS_WGS84_3').style['mix-blend-mode'] = 'normal';
        var layer_PREDIOS_WGS84_3 = new L.geoJson(json_PREDIOS_WGS84_3, {
            attribution: '',
            interactive: true,
            dataVar: 'json_PREDIOS_WGS84_3',
            layerName: 'layer_PREDIOS_WGS84_3',
            pane: 'pane_PREDIOS_WGS84_3',
            onEachFeature: pop_PREDIOS_WGS84_3,
            style: style_PREDIOS_WGS84_3_0,
        });
        bounds_group.addLayer(layer_PREDIOS_WGS84_3);
        map.addLayer(layer_PREDIOS_WGS84_3);
        function pop_SE_MIRAJE_POL_WGS84_4(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Leng</th>\
                        <td>' + (feature.properties['SHAPE_Leng'] !== null ? autolinker.link(feature.properties['SHAPE_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Area</th>\
                        <td>' + (feature.properties['SHAPE_Area'] !== null ? autolinker.link(feature.properties['SHAPE_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_SE_MIRAJE_POL_WGS84_4_0() {
            return {
                pane: 'pane_SE_MIRAJE_POL_WGS84_4',
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '10,5',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 2.0, 
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_SE_MIRAJE_POL_WGS84_4');
        map.getPane('pane_SE_MIRAJE_POL_WGS84_4').style.zIndex = 404;
        map.getPane('pane_SE_MIRAJE_POL_WGS84_4').style['mix-blend-mode'] = 'normal';
        var layer_SE_MIRAJE_POL_WGS84_4 = new L.geoJson(json_SE_MIRAJE_POL_WGS84_4, {
            attribution: '',
            interactive: true,
            dataVar: 'json_SE_MIRAJE_POL_WGS84_4',
            layerName: 'layer_SE_MIRAJE_POL_WGS84_4',
            pane: 'pane_SE_MIRAJE_POL_WGS84_4',
            onEachFeature: pop_SE_MIRAJE_POL_WGS84_4,
            style: style_SE_MIRAJE_POL_WGS84_4_0,
        });
        bounds_group.addLayer(layer_SE_MIRAJE_POL_WGS84_4);
        map.addLayer(layer_SE_MIRAJE_POL_WGS84_4);
        function pop_COYA_SUR_WGS84_5(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Leng</th>\
                        <td>' + (feature.properties['SHAPE_Leng'] !== null ? autolinker.link(feature.properties['SHAPE_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Area</th>\
                        <td>' + (feature.properties['SHAPE_Area'] !== null ? autolinker.link(feature.properties['SHAPE_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_COYA_SUR_WGS84_5_0() {
            return {
                pane: 'pane_COYA_SUR_WGS84_5',
                opacity: 1,
                color: 'rgba(0,0,0,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 1.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_COYA_SUR_WGS84_5');
        map.getPane('pane_COYA_SUR_WGS84_5').style.zIndex = 405;
        map.getPane('pane_COYA_SUR_WGS84_5').style['mix-blend-mode'] = 'normal';
        var layer_COYA_SUR_WGS84_5 = new L.geoJson(json_COYA_SUR_WGS84_5, {
            attribution: '',
            interactive: true,
            dataVar: 'json_COYA_SUR_WGS84_5',
            layerName: 'layer_COYA_SUR_WGS84_5',
            pane: 'pane_COYA_SUR_WGS84_5',
            onEachFeature: pop_COYA_SUR_WGS84_5,
            style: style_COYA_SUR_WGS84_5_0,
        });
        bounds_group.addLayer(layer_COYA_SUR_WGS84_5);
        map.addLayer(layer_COYA_SUR_WGS84_5);
        function pop_BOCATOMA_WGS84_6(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Leng</th>\
                        <td>' + (feature.properties['SHAPE_Leng'] !== null ? autolinker.link(feature.properties['SHAPE_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Area</th>\
                        <td>' + (feature.properties['SHAPE_Area'] !== null ? autolinker.link(feature.properties['SHAPE_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_BOCATOMA_WGS84_6_0() {
            return {
                pane: 'pane_BOCATOMA_WGS84_6',
                opacity: 1,
                color: 'rgba(38,89,128,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(55,126,184,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_BOCATOMA_WGS84_6');
        map.getPane('pane_BOCATOMA_WGS84_6').style.zIndex = 406;
        map.getPane('pane_BOCATOMA_WGS84_6').style['mix-blend-mode'] = 'normal';
        var layer_BOCATOMA_WGS84_6 = new L.geoJson(json_BOCATOMA_WGS84_6, {
            attribution: '',
            interactive: true,
            dataVar: 'json_BOCATOMA_WGS84_6',
            layerName: 'layer_BOCATOMA_WGS84_6',
            pane: 'pane_BOCATOMA_WGS84_6',
            onEachFeature: pop_BOCATOMA_WGS84_6,
            style: style_BOCATOMA_WGS84_6_0,
        });
        bounds_group.addLayer(layer_BOCATOMA_WGS84_6);
        map.addLayer(layer_BOCATOMA_WGS84_6);
        function pop_AFECTACION_CCEE_WGS84_7(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ID</th>\
                        <td>' + (feature.properties['ID'] !== null ? autolinker.link(feature.properties['ID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">IDENTIFICA</th>\
                        <td>' + (feature.properties['IDENTIFICA'] !== null ? autolinker.link(feature.properties['IDENTIFICA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">POLIGONO</th>\
                        <td>' + (feature.properties['POLIGONO'] !== null ? autolinker.link(feature.properties['POLIGONO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Leng</th>\
                        <td>' + (feature.properties['SHAPE_Leng'] !== null ? autolinker.link(feature.properties['SHAPE_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Area</th>\
                        <td>' + (feature.properties['SHAPE_Area'] !== null ? autolinker.link(feature.properties['SHAPE_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        var pattern_AFECTACION_CCEE_WGS84_7_0 = new L.StripePattern({
            weight: 0.3,
            spaceWeight: 2.0,
            color: '#000000',
            opacity: 1.0,
            spaceOpacity: 0,
            angle: 315
        });
        pattern_AFECTACION_CCEE_WGS84_7_0.addTo(map);
        function style_AFECTACION_CCEE_WGS84_7_0() {
            return {
                pane: 'pane_AFECTACION_CCEE_WGS84_7',
                stroke: false,
                fillOpacity: 1,
                fillPattern: pattern_AFECTACION_CCEE_WGS84_7_0,
                interactive: true,
            }
        }
        function style_AFECTACION_CCEE_WGS84_7_1() {
            return {
                pane: 'pane_AFECTACION_CCEE_WGS84_7',
                opacity: 1,
                color: 'rgba(0,0,0,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_AFECTACION_CCEE_WGS84_7');
        map.getPane('pane_AFECTACION_CCEE_WGS84_7').style.zIndex = 407;
        map.getPane('pane_AFECTACION_CCEE_WGS84_7').style['mix-blend-mode'] = 'normal';
        var layer_AFECTACION_CCEE_WGS84_7 = new L.geoJson.multiStyle(json_AFECTACION_CCEE_WGS84_7, {
            attribution: '',
            interactive: true,
            dataVar: 'json_AFECTACION_CCEE_WGS84_7',
            layerName: 'layer_AFECTACION_CCEE_WGS84_7',
            pane: 'pane_AFECTACION_CCEE_WGS84_7',
            onEachFeature: pop_AFECTACION_CCEE_WGS84_7,
            styles: [style_AFECTACION_CCEE_WGS84_7_0,style_AFECTACION_CCEE_WGS84_7_1,]
        });
        bounds_group.addLayer(layer_AFECTACION_CCEE_WGS84_7);
        map.addLayer(layer_AFECTACION_CCEE_WGS84_7);
        function pop_RED_VIAL_WGS84_8(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ROL</th>\
                        <td>' + (feature.properties['ROL'] !== null ? autolinker.link(feature.properties['ROL'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ROL_LABEL</th>\
                        <td>' + (feature.properties['ROL_LABEL'] !== null ? autolinker.link(feature.properties['ROL_LABEL'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">NOMBRE</th>\
                        <td>' + (feature.properties['NOMBRE'] !== null ? autolinker.link(feature.properties['NOMBRE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">CARPETA</th>\
                        <td>' + (feature.properties['CARPETA'] !== null ? autolinker.link(feature.properties['CARPETA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">REGION</th>\
                        <td>' + (feature.properties['REGION'] !== null ? autolinker.link(feature.properties['REGION'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ENROLADO</th>\
                        <td>' + (feature.properties['ENROLADO'] !== null ? autolinker.link(feature.properties['ENROLADO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">CONCESIONA</th>\
                        <td>' + (feature.properties['CONCESIONA'] !== null ? autolinker.link(feature.properties['CONCESIONA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">created_us</th>\
                        <td>' + (feature.properties['created_us'] !== null ? autolinker.link(feature.properties['created_us'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">created_da</th>\
                        <td>' + (feature.properties['created_da'] !== null ? autolinker.link(feature.properties['created_da'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">last_edite</th>\
                        <td>' + (feature.properties['last_edite'] !== null ? autolinker.link(feature.properties['last_edite'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">last_edi_1</th>\
                        <td>' + (feature.properties['last_edi_1'] !== null ? autolinker.link(feature.properties['last_edi_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Shape_Leng</th>\
                        <td>' + (feature.properties['Shape_Leng'] !== null ? autolinker.link(feature.properties['Shape_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_RED_VIAL_WGS84_8_0() {
            return {
                pane: 'pane_RED_VIAL_WGS84_8',
                opacity: 1,
                color: 'rgba(111,111,111,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 3.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_RED_VIAL_WGS84_8');
        map.getPane('pane_RED_VIAL_WGS84_8').style.zIndex = 408;
        map.getPane('pane_RED_VIAL_WGS84_8').style['mix-blend-mode'] = 'normal';
        var layer_RED_VIAL_WGS84_8 = new L.geoJson(json_RED_VIAL_WGS84_8, {
            attribution: '',
            interactive: true,
            dataVar: 'json_RED_VIAL_WGS84_8',
            layerName: 'layer_RED_VIAL_WGS84_8',
            pane: 'pane_RED_VIAL_WGS84_8',
            onEachFeature: pop_RED_VIAL_WGS84_8,
            style: style_RED_VIAL_WGS84_8_0,
        });
        bounds_group.addLayer(layer_RED_VIAL_WGS84_8);
        map.addLayer(layer_RED_VIAL_WGS84_8);
        function pop_RED_HIDROGRAFICA_WGS84_9(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">TIPO_DREN</th>\
                        <td>' + (feature.properties['TIPO_DREN'] !== null ? autolinker.link(feature.properties['TIPO_DREN'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">NOMBRE</th>\
                        <td>' + (feature.properties['NOMBRE'] !== null ? autolinker.link(feature.properties['NOMBRE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">NOM_REG</th>\
                        <td>' + (feature.properties['NOM_REG'] !== null ? autolinker.link(feature.properties['NOM_REG'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">NOM_PROV</th>\
                        <td>' + (feature.properties['NOM_PROV'] !== null ? autolinker.link(feature.properties['NOM_PROV'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">NOM_COM</th>\
                        <td>' + (feature.properties['NOM_COM'] !== null ? autolinker.link(feature.properties['NOM_COM'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">DIS_ELEC_1</th>\
                        <td>' + (feature.properties['DIS_ELEC_1'] !== null ? autolinker.link(feature.properties['DIS_ELEC_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">CIR_SENA_1</th>\
                        <td>' + (feature.properties['CIR_SENA_1'] !== null ? autolinker.link(feature.properties['CIR_SENA_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">COD_COMUNA</th>\
                        <td>' + (feature.properties['COD_COMUNA'] !== null ? autolinker.link(feature.properties['COD_COMUNA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Leng</th>\
                        <td>' + (feature.properties['SHAPE_Leng'] !== null ? autolinker.link(feature.properties['SHAPE_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Shape_Le_1</th>\
                        <td>' + (feature.properties['Shape_Le_1'] !== null ? autolinker.link(feature.properties['Shape_Le_1'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_RED_HIDROGRAFICA_WGS84_9_0() {
            return {
                pane: 'pane_RED_HIDROGRAFICA_WGS84_9',
                opacity: 1,
                color: 'rgba(72,123,182,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 3.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_RED_HIDROGRAFICA_WGS84_9');
        map.getPane('pane_RED_HIDROGRAFICA_WGS84_9').style.zIndex = 409;
        map.getPane('pane_RED_HIDROGRAFICA_WGS84_9').style['mix-blend-mode'] = 'normal';
        var layer_RED_HIDROGRAFICA_WGS84_9 = new L.geoJson(json_RED_HIDROGRAFICA_WGS84_9, {
            attribution: '',
            interactive: true,
            dataVar: 'json_RED_HIDROGRAFICA_WGS84_9',
            layerName: 'layer_RED_HIDROGRAFICA_WGS84_9',
            pane: 'pane_RED_HIDROGRAFICA_WGS84_9',
            onEachFeature: pop_RED_HIDROGRAFICA_WGS84_9,
            style: style_RED_HIDROGRAFICA_WGS84_9_0,
        });
        bounds_group.addLayer(layer_RED_HIDROGRAFICA_WGS84_9);
        map.addLayer(layer_RED_HIDROGRAFICA_WGS84_9);
        function pop_LT_AGOSTO_2019_WGS84_10(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Shape_Leng</th>\
                        <td>' + (feature.properties['Shape_Leng'] !== null ? autolinker.link(feature.properties['Shape_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_LT_AGOSTO_2019_WGS84_10_0() {
            return {
                pane: 'pane_LT_AGOSTO_2019_WGS84_10',
                opacity: 1,
                color: 'rgba(219,30,42,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 3.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_LT_AGOSTO_2019_WGS84_10');
        map.getPane('pane_LT_AGOSTO_2019_WGS84_10').style.zIndex = 410;
        map.getPane('pane_LT_AGOSTO_2019_WGS84_10').style['mix-blend-mode'] = 'normal';
        var layer_LT_AGOSTO_2019_WGS84_10 = new L.geoJson(json_LT_AGOSTO_2019_WGS84_10, {
            attribution: '',
            interactive: true,
            dataVar: 'json_LT_AGOSTO_2019_WGS84_10',
            layerName: 'layer_LT_AGOSTO_2019_WGS84_10',
            pane: 'pane_LT_AGOSTO_2019_WGS84_10',
            onEachFeature: pop_LT_AGOSTO_2019_WGS84_10,
            style: style_LT_AGOSTO_2019_WGS84_10_0,
        });
        bounds_group.addLayer(layer_LT_AGOSTO_2019_WGS84_10);
        map.addLayer(layer_LT_AGOSTO_2019_WGS84_10);
        function pop_LINEAS_EXISTENTES_WGS84_11(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ID_Cruce</th>\
                        <td>' + (feature.properties['ID_Cruce'] !== null ? autolinker.link(feature.properties['ID_Cruce'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Entre_Estr</th>\
                        <td>' + (feature.properties['Entre_Estr'] !== null ? autolinker.link(feature.properties['Entre_Estr'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Este__m_</th>\
                        <td>' + (feature.properties['Este__m_'] !== null ? autolinker.link(feature.properties['Este__m_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Norte__m_</th>\
                        <td>' + (feature.properties['Norte__m_'] !== null ? autolinker.link(feature.properties['Norte__m_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Comuna</th>\
                        <td>' + (feature.properties['Comuna'] !== null ? autolinker.link(feature.properties['Comuna'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Propietari</th>\
                        <td>' + (feature.properties['Propietari'] !== null ? autolinker.link(feature.properties['Propietari'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Nombre_de_</th>\
                        <td>' + (feature.properties['Nombre_de_'] !== null ? autolinker.link(feature.properties['Nombre_de_'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Voltaje_L</th>\
                        <td>' + (feature.properties['Voltaje_L'] !== null ? autolinker.link(feature.properties['Voltaje_L'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Leng</th>\
                        <td>' + (feature.properties['SHAPE_Leng'] !== null ? autolinker.link(feature.properties['SHAPE_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_LINEAS_EXISTENTES_WGS84_11_0() {
            return {
                pane: 'pane_LINEAS_EXISTENTES_WGS84_11',
                opacity: 1,
                color: 'rgba(255,127,0,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 3.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_LINEAS_EXISTENTES_WGS84_11');
        map.getPane('pane_LINEAS_EXISTENTES_WGS84_11').style.zIndex = 411;
        map.getPane('pane_LINEAS_EXISTENTES_WGS84_11').style['mix-blend-mode'] = 'normal';
        var layer_LINEAS_EXISTENTES_WGS84_11 = new L.geoJson(json_LINEAS_EXISTENTES_WGS84_11, {
            attribution: '',
            interactive: true,
            dataVar: 'json_LINEAS_EXISTENTES_WGS84_11',
            layerName: 'layer_LINEAS_EXISTENTES_WGS84_11',
            pane: 'pane_LINEAS_EXISTENTES_WGS84_11',
            onEachFeature: pop_LINEAS_EXISTENTES_WGS84_11,
            style: style_LINEAS_EXISTENTES_WGS84_11_0,
        });
        bounds_group.addLayer(layer_LINEAS_EXISTENTES_WGS84_11);
        map.addLayer(layer_LINEAS_EXISTENTES_WGS84_11);
        function pop_EJE_LINEA_FERREA_WGS84_12(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">NOMBRE</th>\
                        <td>' + (feature.properties['NOMBRE'] !== null ? autolinker.link(feature.properties['NOMBRE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PROPIETARI</th>\
                        <td>' + (feature.properties['PROPIETARI'] !== null ? autolinker.link(feature.properties['PROPIETARI'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Shape_Leng</th>\
                        <td>' + (feature.properties['Shape_Leng'] !== null ? autolinker.link(feature.properties['Shape_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_EJE_LINEA_FERREA_WGS84_12_0() {
            return {
                pane: 'pane_EJE_LINEA_FERREA_WGS84_12',
                opacity: 1,
                color: 'rgba(0,0,0,1.0)',
                dashArray: '',
                lineCap: 'round',
                lineJoin: 'round',
                weight: 2.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        function style_EJE_LINEA_FERREA_WGS84_12_1() {
            return {
                pane: 'pane_EJE_LINEA_FERREA_WGS84_12',
                interactive: true,
            }
        }
        map.createPane('pane_EJE_LINEA_FERREA_WGS84_12');
        map.getPane('pane_EJE_LINEA_FERREA_WGS84_12').style.zIndex = 412;
        map.getPane('pane_EJE_LINEA_FERREA_WGS84_12').style['mix-blend-mode'] = 'normal';
        var layer_EJE_LINEA_FERREA_WGS84_12 = new L.geoJson.multiStyle(json_EJE_LINEA_FERREA_WGS84_12, {
            attribution: '',
            interactive: true,
            dataVar: 'json_EJE_LINEA_FERREA_WGS84_12',
            layerName: 'layer_EJE_LINEA_FERREA_WGS84_12',
            pane: 'pane_EJE_LINEA_FERREA_WGS84_12',
            onEachFeature: pop_EJE_LINEA_FERREA_WGS84_12,
            styles: [style_EJE_LINEA_FERREA_WGS84_12_0,style_EJE_LINEA_FERREA_WGS84_12_1,]
        });
        bounds_group.addLayer(layer_EJE_LINEA_FERREA_WGS84_12);
        map.addLayer(layer_EJE_LINEA_FERREA_WGS84_12);
        function pop_TENDIDO_ELECTRICO_WGS84_13(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">SHAPE_Leng</th>\
                        <td>' + (feature.properties['SHAPE_Leng'] !== null ? autolinker.link(feature.properties['SHAPE_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_TENDIDO_ELECTRICO_WGS84_13_0() {
            return {
                pane: 'pane_TENDIDO_ELECTRICO_WGS84_13',
                opacity: 1,
                color: 'rgba(84,176,74,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 3.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_TENDIDO_ELECTRICO_WGS84_13');
        map.getPane('pane_TENDIDO_ELECTRICO_WGS84_13').style.zIndex = 413;
        map.getPane('pane_TENDIDO_ELECTRICO_WGS84_13').style['mix-blend-mode'] = 'normal';
        var layer_TENDIDO_ELECTRICO_WGS84_13 = new L.geoJson(json_TENDIDO_ELECTRICO_WGS84_13, {
            attribution: '',
            interactive: true,
            dataVar: 'json_TENDIDO_ELECTRICO_WGS84_13',
            layerName: 'layer_TENDIDO_ELECTRICO_WGS84_13',
            pane: 'pane_TENDIDO_ELECTRICO_WGS84_13',
            onEachFeature: pop_TENDIDO_ELECTRICO_WGS84_13,
            style: style_TENDIDO_ELECTRICO_WGS84_13_0,
        });
        bounds_group.addLayer(layer_TENDIDO_ELECTRICO_WGS84_13);
        map.addLayer(layer_TENDIDO_ELECTRICO_WGS84_13);
        function pop_CAERIAS_WGS84_14(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Id</th>\
                        <td>' + (feature.properties['Id'] !== null ? autolinker.link(feature.properties['Id'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">TIPO</th>\
                        <td>' + (feature.properties['TIPO'] !== null ? autolinker.link(feature.properties['TIPO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">PLANO</th>\
                        <td>' + (feature.properties['PLANO'] !== null ? autolinker.link(feature.properties['PLANO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">TITULAR</th>\
                        <td>' + (feature.properties['TITULAR'] !== null ? autolinker.link(feature.properties['TITULAR'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ROL_SII</th>\
                        <td>' + (feature.properties['ROL_SII'] !== null ? autolinker.link(feature.properties['ROL_SII'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Shape_Leng</th>\
                        <td>' + (feature.properties['Shape_Leng'] !== null ? autolinker.link(feature.properties['Shape_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_CAERIAS_WGS84_14_0() {
            return {
                pane: 'pane_CAERIAS_WGS84_14',
                opacity: 1,
                color: 'rgba(254,0,233,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 3.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_CAERIAS_WGS84_14');
        map.getPane('pane_CAERIAS_WGS84_14').style.zIndex = 414;
        map.getPane('pane_CAERIAS_WGS84_14').style['mix-blend-mode'] = 'normal';
        var layer_CAERIAS_WGS84_14 = new L.geoJson(json_CAERIAS_WGS84_14, {
            attribution: '',
            interactive: true,
            dataVar: 'json_CAERIAS_WGS84_14',
            layerName: 'layer_CAERIAS_WGS84_14',
            pane: 'pane_CAERIAS_WGS84_14',
            onEachFeature: pop_CAERIAS_WGS84_14,
            style: style_CAERIAS_WGS84_14_0,
        });
        bounds_group.addLayer(layer_CAERIAS_WGS84_14);
        map.addLayer(layer_CAERIAS_WGS84_14);
        function pop_CAMINO_ACCESO_WGS84_15(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">Id</th>\
                        <td>' + (feature.properties['Id'] !== null ? autolinker.link(feature.properties['Id'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_CAMINO_ACCESO_WGS84_15_0() {
            return {
                pane: 'pane_CAMINO_ACCESO_WGS84_15',
                opacity: 1,
                color: 'rgba(213,180,60,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 1.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_CAMINO_ACCESO_WGS84_15');
        map.getPane('pane_CAMINO_ACCESO_WGS84_15').style.zIndex = 415;
        map.getPane('pane_CAMINO_ACCESO_WGS84_15').style['mix-blend-mode'] = 'normal';
        var layer_CAMINO_ACCESO_WGS84_15 = new L.geoJson(json_CAMINO_ACCESO_WGS84_15, {
            attribution: '',
            interactive: true,
            dataVar: 'json_CAMINO_ACCESO_WGS84_15',
            layerName: 'layer_CAMINO_ACCESO_WGS84_15',
            pane: 'pane_CAMINO_ACCESO_WGS84_15',
            onEachFeature: pop_CAMINO_ACCESO_WGS84_15,
            style: style_CAMINO_ACCESO_WGS84_15_0,
        });
        bounds_group.addLayer(layer_CAMINO_ACCESO_WGS84_15);
        map.addLayer(layer_CAMINO_ACCESO_WGS84_15);
        function pop_ACUEDUCTO_SQM_WGS84_16(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">Name</th>\
                        <td>' + (feature.properties['Name'] !== null ? autolinker.link(feature.properties['Name'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">descriptio</th>\
                        <td>' + (feature.properties['descriptio'] !== null ? autolinker.link(feature.properties['descriptio'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">timestamp</th>\
                        <td>' + (feature.properties['timestamp'] !== null ? autolinker.link(feature.properties['timestamp'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">begin</th>\
                        <td>' + (feature.properties['begin'] !== null ? autolinker.link(feature.properties['begin'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">end</th>\
                        <td>' + (feature.properties['end'] !== null ? autolinker.link(feature.properties['end'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">altitudeMo</th>\
                        <td>' + (feature.properties['altitudeMo'] !== null ? autolinker.link(feature.properties['altitudeMo'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">tessellate</th>\
                        <td>' + (feature.properties['tessellate'] !== null ? autolinker.link(feature.properties['tessellate'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">extrude</th>\
                        <td>' + (feature.properties['extrude'] !== null ? autolinker.link(feature.properties['extrude'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">visibility</th>\
                        <td>' + (feature.properties['visibility'] !== null ? autolinker.link(feature.properties['visibility'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">drawOrder</th>\
                        <td>' + (feature.properties['drawOrder'] !== null ? autolinker.link(feature.properties['drawOrder'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">icon</th>\
                        <td>' + (feature.properties['icon'] !== null ? autolinker.link(feature.properties['icon'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_ACUEDUCTO_SQM_WGS84_16_0() {
            return {
                pane: 'pane_ACUEDUCTO_SQM_WGS84_16',
                opacity: 1,
                color: 'rgba(141,90,153,1.0)',
                dashArray: '',
                lineCap: 'square',
                lineJoin: 'bevel',
                weight: 1.0,
                fillOpacity: 0,
                interactive: true,
            }
        }
        map.createPane('pane_ACUEDUCTO_SQM_WGS84_16');
        map.getPane('pane_ACUEDUCTO_SQM_WGS84_16').style.zIndex = 416;
        map.getPane('pane_ACUEDUCTO_SQM_WGS84_16').style['mix-blend-mode'] = 'normal';
        var layer_ACUEDUCTO_SQM_WGS84_16 = new L.geoJson(json_ACUEDUCTO_SQM_WGS84_16, {
            attribution: '',
            interactive: true,
            dataVar: 'json_ACUEDUCTO_SQM_WGS84_16',
            layerName: 'layer_ACUEDUCTO_SQM_WGS84_16',
            pane: 'pane_ACUEDUCTO_SQM_WGS84_16',
            onEachFeature: pop_ACUEDUCTO_SQM_WGS84_16,
            style: style_ACUEDUCTO_SQM_WGS84_16_0,
        });
        bounds_group.addLayer(layer_ACUEDUCTO_SQM_WGS84_16);
        map.addLayer(layer_ACUEDUCTO_SQM_WGS84_16);
        function pop_ESTRUCTURAS__2191204_WGS84_17(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">NÚMERO</th>\
                        <td>' + (feature.properties['NÚMERO'] !== null ? autolinker.link(feature.properties['NÚMERO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">TIPO</th>\
                        <td>' + (feature.properties['TIPO'] !== null ? autolinker.link(feature.properties['TIPO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">X</th>\
                        <td>' + (feature.properties['X'] !== null ? autolinker.link(feature.properties['X'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">Y</th>\
                        <td>' + (feature.properties['Y'] !== null ? autolinker.link(feature.properties['Y'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ORDEN</th>\
                        <td>' + (feature.properties['ORDEN'] !== null ? autolinker.link(feature.properties['ORDEN'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_ESTRUCTURAS__2191204_WGS84_17_0() {
            return {
                pane: 'pane_ESTRUCTURAS__2191204_WGS84_17',
                radius: 4.0,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(255,5,1,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_ESTRUCTURAS__2191204_WGS84_17');
        map.getPane('pane_ESTRUCTURAS__2191204_WGS84_17').style.zIndex = 417;
        map.getPane('pane_ESTRUCTURAS__2191204_WGS84_17').style['mix-blend-mode'] = 'normal';
        var layer_ESTRUCTURAS__2191204_WGS84_17 = new L.geoJson(json_ESTRUCTURAS__2191204_WGS84_17, {
            attribution: '',
            interactive: true,
            dataVar: 'json_ESTRUCTURAS__2191204_WGS84_17',
            layerName: 'layer_ESTRUCTURAS__2191204_WGS84_17',
            pane: 'pane_ESTRUCTURAS__2191204_WGS84_17',
            onEachFeature: pop_ESTRUCTURAS__2191204_WGS84_17,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.circleMarker(latlng, style_ESTRUCTURAS__2191204_WGS84_17_0(feature));
            },
        });
        bounds_group.addLayer(layer_ESTRUCTURAS__2191204_WGS84_17);
        map.addLayer(layer_ESTRUCTURAS__2191204_WGS84_17);
        function pop_NODOS_20200519_WGS84_18(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <th scope="row">OBJECTID</th>\
                        <td>' + (feature.properties['OBJECTID'] !== null ? autolinker.link(feature.properties['OBJECTID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">ORIG_FID</th>\
                        <td>' + (feature.properties['ORIG_FID'] !== null ? autolinker.link(feature.properties['ORIG_FID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">POINT_X</th>\
                        <td>' + (feature.properties['POINT_X'] !== null ? autolinker.link(feature.properties['POINT_X'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <th scope="row">POINT_Y</th>\
                        <td>' + (feature.properties['POINT_Y'] !== null ? autolinker.link(feature.properties['POINT_Y'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
        }

        function style_NODOS_20200519_WGS84_18_0() {
            return {
                pane: 'pane_NODOS_20200519_WGS84_18',
                radius: 4.0,
                opacity: 1,
                color: 'rgba(35,35,35,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1,
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(1,255,5,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_NODOS_20200519_WGS84_18');
        map.getPane('pane_NODOS_20200519_WGS84_18').style.zIndex = 418;
        map.getPane('pane_NODOS_20200519_WGS84_18').style['mix-blend-mode'] = 'normal';
        var layer_NODOS_20200519_WGS84_18 = new L.geoJson(json_NODOS_20200519_WGS84_18, {
            attribution: '',
            interactive: true,
            dataVar: 'json_NODOS_20200519_WGS84_18',
            layerName: 'layer_NODOS_20200519_WGS84_18',
            pane: 'pane_NODOS_20200519_WGS84_18',
            onEachFeature: pop_NODOS_20200519_WGS84_18,
            pointToLayer: function (feature, latlng) {
                var context = {
                    feature: feature,
                    variables: {}
                };
                return L.circleMarker(latlng, style_NODOS_20200519_WGS84_18_0(feature));
            },
        });
        bounds_group.addLayer(layer_NODOS_20200519_WGS84_18);
        map.addLayer(layer_NODOS_20200519_WGS84_18);
        var osmGeocoder = new L.Control.Geocoder({
            collapsed: true,
            position: 'topleft',
            text: 'Search',
            title: 'Testing'
        }).addTo(map);
        document.getElementsByClassName('leaflet-control-geocoder-icon')[0]
        .className += ' fa fa-search';
        document.getElementsByClassName('leaflet-control-geocoder-icon')[0]
        .title += 'Search for a place';
        var baseMaps = {};
        L.control.layers(baseMaps,{'<img src="legend/NODOS_20200519_WGS84_18.png" /> NODOS_20200519_WGS84': layer_NODOS_20200519_WGS84_18,'<img src="legend/ESTRUCTURAS__2191204_WGS84_17.png" /> ESTRUCTURAS__2191204_WGS84': layer_ESTRUCTURAS__2191204_WGS84_17,'<img src="legend/ACUEDUCTO_SQM_WGS84_16.png" /> ACUEDUCTO_SQM_WGS84': layer_ACUEDUCTO_SQM_WGS84_16,'<img src="legend/CAMINO_ACCESO_WGS84_15.png" /> CAMINO_ACCESO_WGS84': layer_CAMINO_ACCESO_WGS84_15,'<img src="legend/CAERIAS_WGS84_14.png" /> CAÑERIAS_WGS84': layer_CAERIAS_WGS84_14,'<img src="legend/TENDIDO_ELECTRICO_WGS84_13.png" /> TENDIDO_ELECTRICO_WGS84': layer_TENDIDO_ELECTRICO_WGS84_13,'<img src="legend/EJE_LINEA_FERREA_WGS84_12.png" /> EJE_LINEA_FERREA_WGS84': layer_EJE_LINEA_FERREA_WGS84_12,'<img src="legend/LINEAS_EXISTENTES_WGS84_11.png" /> LINEAS_EXISTENTES_WGS84': layer_LINEAS_EXISTENTES_WGS84_11,'<img src="legend/LT_AGOSTO_2019_WGS84_10.png" /> LT_AGOSTO_2019_WGS84': layer_LT_AGOSTO_2019_WGS84_10,'<img src="legend/RED_HIDROGRAFICA_WGS84_9.png" /> RED_HIDROGRAFICA_WGS84': layer_RED_HIDROGRAFICA_WGS84_9,'<img src="legend/RED_VIAL_WGS84_8.png" /> RED_VIAL_WGS84': layer_RED_VIAL_WGS84_8,'<img src="legend/AFECTACION_CCEE_WGS84_7.png" /> AFECTACION_CCEE_WGS84': layer_AFECTACION_CCEE_WGS84_7,'<img src="legend/BOCATOMA_WGS84_6.png" /> BOCATOMA_WGS84': layer_BOCATOMA_WGS84_6,'<img src="legend/COYA_SUR_WGS84_5.png" /> COYA_SUR_WGS84': layer_COYA_SUR_WGS84_5,'<img src="legend/SE_MIRAJE_POL_WGS84_4.png" /> SE_MIRAJE_POL_WGS84': layer_SE_MIRAJE_POL_WGS84_4,'<img src="legend/PREDIOS_WGS84_3.png" /> PREDIOS_WGS84': layer_PREDIOS_WGS84_3,"Google Satellite": layer_GoogleSatellite_2,"Google Streets": layer_GoogleStreets_1,"OpenStreetMap": layer_OpenStreetMap_0,}).addTo(map);
        setBounds();
        </script>
    </body>
</html>
